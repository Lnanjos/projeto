<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:p="http://primefaces.org/ui">
<h:head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>Produto</title>
</h:head>
<h:body>

	<!-- se refere a uma tag do formulario -->
	<p:growl id="mensagem" />

	<!-- id que identifica qual componente que sera atualizado, é identificado pelo nome formListagem -->
	<h:form id="formListagem">

		<!--criação do painel e nome do cabeçalho  -->
		<p:panel header="Produto- Listagem">

			<!-- criação das tabelas que recebera os dados do nbanco de dados -->
			<p:dataTable emptyMessage="Nenhum Registro Encontrado"
				paginator="true" value="#{produtoBean.produtos}" var="produto" id="tabela">

				<!-- define os atributos da tela e os metodos que foram implementados no bean -->
				<f:facet name="footer">
					<!-- value é o que aparece dentro do botao, oncomplete é um componente que vai aparecer na tela -->
					<p:commandButton value="Novo" oncomplete="PF('dialogo').show();"
						actionListener="#{produtoBean.novo}" 
						update=":formCadastro:painel"/>
				</f:facet>

				<p:column headerText="Nome" sortBy="#{produto.descricao}">
					<h:outputText value="#{produto.descricao}" />
				</p:column>

				<p:column headerText="Quantidade" sortBy="#{produto.quantidade}"
					filterBy="#{produto.quantidade}">
					<h:outputText value="#{produto.quantidade}" />
				</p:column>

				<p:column headerText="Preço" sortBy="#{produto.preco}"
					filterBy="#{produto.preco}">
					<h:outputText value="#{produto.preco}" />
				</p:column>

				<!-- implementa as funcoes de excluir e editar -->
				<p:column headerText="Opções">
					<p:commandButton icon="ui-icon-trash"
						actionListener="#{produtoBean.excluir}"
						update=":mensagem :formListagem:tabela">
						<p:confirm header="Confirmação"
							message="Deseja excluir o produto?" icon="ui-icon-alert" />
						<f:attribute name="produtoSelecionado" value="#{produto}" />
					</p:commandButton>

					<p:commandButton icon="ui-icon-pencil"
						actionListener="#{produtoBean.editar}"
						update=":mensagem :formCadastro:painel"
						oncomplete="PF('dialogo').show();">
						<f:attribute name="produtoSelecionada" value="#{produto}" />

						<!-- preenchido com os dados da linha que foi clicada, usa o estado que é a 
					var que ja foi criada anteriormente -->
						<f:attribute name="produtoSelecionado" value="#{produto}" />

					</p:commandButton>
				</p:column>
			</p:dataTable>

			<p:confirmDialog global="true">
				<p:commandButton value="Sim" type="button"
					styleClass="ui-confirmdialog-yes" icon="ui-icon-check" />
				<p:commandButton value="Não" type="button"
					styleClass="ui-confirmdialog-no" icon="ui-icon-close" />
			</p:confirmDialog>

		</p:panel>
	</h:form>

	<!-- tamanho da janela resizable="false"  o é para fechar a janela closable="false" -->
	<p:dialog header="Produtos - Cadastro" widgetVar="dialogo"
		draggable="false" resizable="false" modal="true" closable="false">
		<h:form id="formCadastro">
			<!-- define o numero de colunas dos elementos de sua paginas -->
			<h:panelGrid columns="2" id="painel">
				<p:outputLabel value="Nome:" />
				<p:inputText maxlength="50" size="30" value="#{produtoBean.produto.descricao}"/>

				<p:outputLabel value="Quantidade"/>
				<p:inputText size="100" value="#{produtoBean.produto.quantidade}"/>

				<p:outputLabel value="Preco"/>
				<p:inputText maxlength="7" size="30" value="#{produtoBean.produto.preco}"/>


				<!-- chave estrangeira -->
				<p:outputLabel value="Fabricante" for="fabricante" />

				<!-- Select one menu componente para fazer a combobox, no value colocar o caminho do objeto e do atributo. 
				Pode-se fazer duas implementações dentro da combobox, a selecItem = selecione um estado por exemplo só 1 implementação, 
				e selectItems  usar o noSelectOptions, não pode selecionar essa opção, deverá escolher uma das demais opções, 
				é o que realmente preenche a combobox com a informação selecionada.. -->
				<!-- //o Converter é um conversor que pega o objeto de dentro da combobox
				e o transforma em um valor que poderá ser salvo no banco, pegamos ele do omnifaces que é
			     a biblioteca que foi baixada no pom, para fazer a implementação do conversor 
			     temos que usar a to string no domain genérico. -->

				<p:selectOneMenu id="fabricante" filter="true" value="#{produtoBean.produto.fabricante}"
					converter="omnifaces.SelectItemsConverter"
					required="true" requiredMessage="Campo fabricante Obrigatório!">
					<f:selectItem noSelectionOption="true" itemLabel="Selecione um fabricante" />
				
					<f:selectItems value="#{fabricanteBean.fabricantes}" var="fabricante"
						itemValue="#{fabricante}" itemLabel="#{fabricante.descricao}"/>
				</p:selectOneMenu>

			</h:panelGrid>

			<h:panelGrid columns="2">
				<p:commandButton value="Salvar"
					actionListener="#{produtoBean.salvar}"
					update=":mensagem :formCadastro:painel :formListagem:tabela" />
				<p:commandButton value="Fechar" oncomplete="PF('dialogo').hide();" />
			</h:panelGrid>
		</h:form>
	</p:dialog>

</h:body>
</html>